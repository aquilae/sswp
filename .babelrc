{
  "sourceMaps": "inline",
  "plugins": [
    // preset: es2015
    // notes:
    // `spec` when false, closure is used to bind arrow functions, when true - `.bind(this)`
    // not tested, but obviously we can use only one (or zero) of `transform-es2015-modules-` plugin
    // `tranform-regenerator` is used in es2015 preset, not sure if `transform-async-to-generator` will suffice in browser
    ["transform-es2015-template-literals", {"loose": false, "spec": false}],
    ["transform-es2015-literals"],
    ["transform-es2015-function-name"],
    ["transform-es2015-arrow-functions", {"spec": false}],
    ["transform-es2015-block-scoped-functions"],
    ["transform-es2015-classes", {"loose": false}],
    ["transform-es2015-object-super"],
    ["transform-class-properties"], // custom; state 2; class { instanceField = 42; static staticField = 24; }
    ["transform-es2015-shorthand-properties"],
    ["transform-es2015-duplicate-keys"],
    ["transform-es2015-computed-properties", {"loose": false}],
    ["transform-es2015-for-of", {"loose": false}],
    ["transform-es2015-sticky-regex"],
    ["transform-es2015-unicode-regex"],
    ["check-es2015-constants"],
    ["transform-es2015-spread", {"loose": false}],
    ["transform-es2015-parameters"],
    ["transform-es2015-destructuring", {"loose": false}],
    ["transform-es2015-block-scoping"],
    ["transform-es2015-typeof-symbol"],
    ["transform-es2015-modules-commonjs"],
    // ["transform-es2015-modules-systemjs"],
    // ["transform-es2015-modules-amd"],
    // ["transform-es2015-modules-umd"],
    ["transform-regenerator", {"async": true, "generators": true, "asyncGenerators": true}],

    // preset: es2016
    ["transform-exponentiation-operator"], // stage 3

    // preset: es2017
    // notes:
    // `es2017` uses chain of `transform-async-to-generator` -> `transform-regenerator`
    ["syntax-trailing-function-commas"], // stage 3
    // ["transform-async-to-generator"], // not needed with truthy `transform-regenerator` options? should check

    // preset: react
    ["syntax-flow"],
    ["syntax-jsx"],
    ["transform-flow-strip-types"],
    ["transform-react-display-name"],
    ["transform-react-jsx"],
    ["transform-react-jsx-source"],
    ["transform-react-jsx-self"], // docs state this should be used only in dev environment

    // custom
    // ["transform-runtime"], // as per docs, should not be used at production environment (not sure why)
    // ["transform-decorators-legacy"], // should not use, as the spec WILL change
    ["transform-class-properties"] // custom; state 2; class { instanceField = 42; static staticField = 24; }
  ]
}
